metrics.reportMetricsJMX=true
metrics.reportMetricsGraphite=false
metrics.reportMetricsSlf4j=false
metrics.graphite.host=vstat.clearforest.com

cmwell {
  grid {
    #clusterName = ${cmwell.clusterName}
    clusterName = "gridCluster"
    bind {
      host = "127.0.0.1"
      port = 7777
    }

    seeds = "127.0.0.1:7777"
    labels = ""

    health {
      possible-registration-fails = 10
    }


    cluster-dispatcher {
      type = "Dispatcher"
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 2
        parallelism-max = 4
      }
    }

    dmap.master-role = "ControllerServer"
    monitor.port = 8000
    min-members = 1


    dmap {
      persistence {
        data-dir = "target/data"
      }
    }

    akka {
      #loglevel = "DEBUG"
      #stdout-loglevel = "DEBUG"
      log-config-on-start = off
      loglevel = "INFO"
      actor {
        #debug {
        #  autoreceive = on
        #  lifecycle = on
        #  event-stream = on
        #}
        provider = "akka.cluster.ClusterActorRefProvider"
      }

      remote {
        #log-sent-messages = on
        #log-received-messages = on

        #    transport-failure-detector.heartbeat-interval = 30s

        netty.tcp {
          port = 0
        }
      }

      cluster {
        singleton {
          # The actor name of the child singleton actor.
          singleton-name = "singleton"

          # Singleton among the nodes tagged with specified role.
          # If the role is not specified it's a singleton among all nodes in the cluster.
          role = ""

          # When a node is becoming oldest it sends hand-over request to previous oldest,
          # that might be leaving the cluster. This is retried with this interval until
          # the previous oldest confirms that the hand over has started or the previous
          # oldest member is removed from the cluster (+ akka.cluster.down-removal-margin).
          hand-over-retry-interval = 1s

          # The number of retries are derived from hand-over-retry-interval and
          # akka.cluster.down-removal-margin (or ClusterSingletonManagerSettings.removalMargin),
          # but it will never be less than this property.
          min-number-of-hand-over-retries = 10

        }

        singleton-proxy {
          # The actor name of the singleton actor that is started by the ClusterSingletonManager
          singleton-name = ${akka.cluster.singleton.singleton-name}

          # The role of the cluster nodes where the singleton can be deployed.
          # If the role is not specified then any node will do.
          role = ""

          # Interval at which the proxy will try to resolve the singleton instance.
          singleton-identification-interval = 1s

          # If the location of the singleton is unknown the proxy will buffer this
          # number of messages and deliver them when the singleton is identified.
          # When the buffer is full old messages will be dropped when new messages are
          # sent via the proxy.
          # Use 0 to disable buffering, i.e. messages will be dropped immediately if
          # the location of the singleton is unknown.
          # Maximum allowed buffer size is 10000.
          buffer-size = 1000
        }

        auto-down-unreachable-after = 30s
        #    failure-detector {
        #      acceptable-heartbeat-pause = 5s
        #      threshold = 12.0
        #    }

        use-dispatcher = cmwell.grid.cluster-dispatcher
      }
      extensions = ["akka.cluster.client.ClusterClientReceptionist"]
    }
  }
}

ftsService.waitForGreen=true
ftsService.clusterName=fts_test_cluster
ftsService.transportAddress=[localhost]
ftsService.transportPort=9300
ftsService.defaultPartition=cmwell
ftsService.defaultPartitionNew=cm_well
ftsService.scrollTTL=3600
ftsService.scrollLength=100
ftsService.sniff=false
dataCenter.id=test_dc

cmwell.rdf.defaultProtocol = "http"

cmwell {
  common.reportMetricsToES = false
  dataCenter.id = dc
  kafka.numOfPartitions = 1
  rdf.defaultProtocol = "http"
  bg {
    #kafka.bootstrap.servers = "localhost:9092" - kept here only for reference
    persist.commands.topic = persist_topic
    persist.commands.partition = 0
    index.commands.topic = index_topic
    index.commands.partition = 0
    num.of.cassandra.nodes = 20
    allIndicesAliasName = cm_well_all
    latestIndexAliasName = cm_well_latest
    indexNamePrefix = cm_well_
    maxAggWeight = 256 # in KB
    maxDocsPerShard = 10
    maintainIndicesInterval = 2
    offset.files.dir = ./target
    maxInfotonWeightToIncludeInCommand = 256K
    esActionsBulkSize = 2500000 # in bytes
    esActionsParallelism = 10
    waitAfter503 = 5 # in seconds
    esActionsGroupingTtl = 100 # in milliseconds
    groupCommandsByPathSize = 20 # number of commands ImpStream will group by path
    groupCommandsByPathTtl = 100 # in miliseconds
    irwReadConcurrency = 10
    irwWriteConcurrency = 10
    fuseOn = false
  }
  crawler {
    persist {
      key = "crawlerPosition"
      maxTime = 1 minute
      maxAmount = 13000
    }
    safetyNetTime = 1 minute
    restartDelayTime = 30 seconds
    retryDuration = 30.seconds
    checkParallelism = 1
  }
}

dataCenter.id=dc
ftsService.clusterName=bg_test_cluster
ftsService.transportAddress=[localhost]
ftsService.transportPort=9300
ftsService.defaultPartition=cmwell
ftsService.defaultPartitionNew=cm_well
ftsService.scrollTTL=3600
ftsService.scrollLength=100
ftsService.waitForGreen=true
ftsService.sniff=false

metrics.reportMetricsJMX=false
metrics.reportMetricsGraphite=false
metrics.reportMetricsSlf4j=false
metrics.graphite.host=vstat.clearforest.com

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  #akka is configured to log in DEBUG level. The actual level is determined by logback
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  coordinated-shutdown.run-by-jvm-shutdown-hook = off
}