cmwell {
  zstore {
    chunkSize = 32768
  }
}

stats.domainName=cmwell
stats.host=vstat
stats.port=8125

cmwell.util.http {
  akka {
    actor {
      provider = "akka.actor.LocalActorRefProvider"
    }
    http {
      host-connection-pool {
        max-open-requests = 1024
      }
    }
  }
}

cmwell.agents {
  sparql-triggered-processor {
    format = "ntriples"
    write-token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJzdHBBZ2VudCIsImV4cCI6NDYzODkwMjQwMDAwMCwicmV2IjowfQ.gWkkmwJrXyE0-0OV4Mo4Jh-rD4hy1HE6AIaHbhDnMQ8
    write-token = ${?STP_USER_TOKEN}
    host-config-file = "localhost:9000"
    host-updates-source = "localhost:9000"
    use-quads-in-sp = false
    host-write-output = "localhost:9000"
    path-agent-configs = "/meta/sys/agents/sparql"
    init-delay = 10 seconds
    max-delay = 5 minutes
    config-polling-interval = 30 seconds
    sensor-alert-delay = 1 day
  }
}

cmwell {
  grid {
    #clusterName = ${cmwell.clusterName}
    clusterName = "gridCluster"
    bind {
      host = "127.0.0.1"
      port = 7777
    }

    seeds = "127.0.0.1:7777"
    labels = ""

    health {
      possible-registration-fails = 10
    }


    cluster-dispatcher {
      type = "Dispatcher"
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 2
        parallelism-max = 4
      }
    }

    dmap.master-role = "ControllerServer"
    monitor.port = 8000
    min-members = 1


    dmap {
      persistence {
        data-dir = "target/data"
      }
    }

    akka {
      #loglevel = "DEBUG"
      #stdout-loglevel = "DEBUG"
      log-config-on-start = off
      loglevel = "INFO"
      actor {
        #debug {
        #  autoreceive = on
        #  lifecycle = on
        #  event-stream = on
        #}
        provider = "akka.cluster.ClusterActorRefProvider"
      }

      remote {
        #log-sent-messages = on
        #log-received-messages = on

        #    transport-failure-detector.heartbeat-interval = 30s

        netty.tcp {
          port = 0
        }
      }

      cluster {
        singleton {
          # The actor name of the child singleton actor.
          singleton-name = "singleton"

          # Singleton among the nodes tagged with specified role.
          # If the role is not specified it's a singleton among all nodes in the cluster.
          role = ""

          # When a node is becoming oldest it sends hand-over request to previous oldest,
          # that might be leaving the cluster. This is retried with this interval until
          # the previous oldest confirms that the hand over has started or the previous
          # oldest member is removed from the cluster (+ akka.cluster.down-removal-margin).
          hand-over-retry-interval = 1s

          # The number of retries are derived from hand-over-retry-interval and
          # akka.cluster.down-removal-margin (or ClusterSingletonManagerSettings.removalMargin),
          # but it will never be less than this property.
          min-number-of-hand-over-retries = 10

        }

        singleton-proxy {
          # The actor name of the singleton actor that is started by the ClusterSingletonManager
          singleton-name = ${akka.cluster.singleton.singleton-name}

          # The role of the cluster nodes where the singleton can be deployed.
          # If the role is not specified then any node will do.
          role = ""

          # Interval at which the proxy will try to resolve the singleton instance.
          singleton-identification-interval = 1s

          # If the location of the singleton is unknown the proxy will buffer this
          # number of messages and deliver them when the singleton is identified.
          # When the buffer is full old messages will be dropped when new messages are
          # sent via the proxy.
          # Use 0 to disable buffering, i.e. messages will be dropped immediately if
          # the location of the singleton is unknown.
          # Maximum allowed buffer size is 10000.
          buffer-size = 1000
        }

        auto-down-unreachable-after = 30s
        #    failure-detector {
        #      acceptable-heartbeat-pause = 5s
        #      threshold = 12.0
        #    }

        use-dispatcher = cmwell.grid.cluster-dispatcher
      }
      extensions = ["akka.cluster.client.ClusterClientReceptionist"]
    }
  }
}

cmwell {
  dc {
    clusterName = cm-well
    hostName = 127.0.0.1
    seedNodes = 127.0.0.1
    port = 0
    target = "127.0.0.1:9000"
    # FileInfotons contain a possibly large data chunk (25M) which
    # is inflated because it is rendered to Base64 (3:4 ratio)
    # and also need to take into account the other nq statement parts.
    maxStatementLength = 35M
    pull {
      initialTsvRetryCount = 10
      lockedOnConsume = false
      bulkTsvRetryCount = 2
      consumeFallbackDuration = 5 minutes # time of degradation from bulk to consume
      tsvBufferSize = 0
      #delayInSecondsBetweenNoContentRetries = 30 #actually not used due to what seems to be a bug in akka http
      maxRetrieveInfotonCount = 25
      maxRetrieveByteSize = 1MB
      maxTotalInfotonCountAggregatedForRetrieve = 100000
      retrieveParallelism = 20
      initialBulkRetrieveRetryCount = 0
      maxBulkRetrieveRetryDelay = 1200 milliseconds # The delay will increment for each retry until this delay
      initialSingleRetrieveRetryCount = 6
      maxSingleRetrieveRetryDelay = 1200 milliseconds # The delay will increment for each retry until this delay
      retrieveRetryQueueSize = 25
    }
    push {
      maxIngestInfotonCount = 25
      maxIngestByteSize = 1MB
      maxTotalInfotonCountAggregatedForIngest = 100
      initialBulkIngestRetryCount = 0
      initialSingleIngestRetryCount = 5
      gzippedIngest = false
      ingestParallelism = 20
      ingestRetryQueueSize = 25
      ingestRetryDelay = 1 second
      ingestServiceUnavailableDelay = 10 second
    }
  }
}

ctrl {
  seedPort = 7777
  sprayPort = 8080
  listenAddress = 127.0.0.1
  seedNodes = 127.0.0.1
  clusterName = cm-well
  roles = node

  commandActorName = command-actor
  serverRole = ControllerServer
  clientRole = ControllerClient

  home = /opt/cm-well

  externalHostName = 127.0.0.1
  webPort = 9000
  pingIp = 127.0.0.1

  hc.historySize = 4
  singletonStarter = true

  agent.gcSampleInterval = 30000

  hc.isolationCheckSeconds = 90
  hc.downNodesGraceTimeMinutes = 15
  hc.hcSampleInterval = 30000
  hc.idleWaitSeconds = 200
  hs.bgSampleInterval = 10000

  agent.heakupSampleInterval = 1000
  agent.heakupReportInterval = 30000

  initialBatchMaster = ""

  hc.esMasters = 3

  hc.webFailCount = 12
}

updatesTlog.name=UpdateTLog
uuidsTlog.name=UuidsTLog

metrics.reportMetricsJMX=true
metrics.reportMetricsGraphite=false
metrics.reportMetricsSlf4j=false
metrics.graphite.host=vstat.clearforest.com

cmwell.bg.ImpOn = true
cmwell.bg.IndexerOn = true